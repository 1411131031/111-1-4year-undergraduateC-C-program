題目一
#include <stdio.h>
#define SIZE 10

void sort(int a[], int c[], int size);
int main(void) {
	int a[SIZE] = { 2,6,4,8,10,12,89,68,45,37 };
	int c[SIZE] = { 66,67,66,70,73,74,75,75,62,32 };

	puts("Data items in original order");

	//output original array
	for (size_t i = 0; i < SIZE; ++i) {
		printf("%4d", a[i]);
	}
	printf("\n");
	for (size_t i = 0; i < SIZE; ++i) {
		printf("%4d", c[i]);
	}

	//bubble sort
	//loop to control number of passes

	sort(a, c, SIZE);
	puts("\nData items in ascending order");

	//output sorted array
	for (size_t i = 0; i < SIZE; ++i) {
		printf("%4d", a[i]);
	}
	printf("\n");
	for (size_t i = 0; i < SIZE; ++i) {
		printf("%4d", c[i]);
	}
	puts("");
}

void sort(int a[], int c[], int size)
{
	int hold;
	for (int pass = 1; pass < SIZE; ++pass) {
		//loop to control number of comparisons per pass
		for (size_t i = 0; i < SIZE - 1; ++i) {
			//compare adjacent elements and swap them if first
			//element is greater than second element
			if (c[i] > c[i + 1]) {
				hold = c[i];
				c[i] = c[i + 1];
				c[i + 1] = hold;
				hold = a[i];
				a[i] = a[i + 1];
				a[i + 1] = hold;
			}
		}
	}
}
題目二
#include <stdio.h>
#define SIZE 10

void sort(int a[], int c[], int size);
int main(void) {
	int a[SIZE] = { 2,6,4,8,10,12,89,68,45,37 };
	int c[SIZE] = { 66,67,66,70,73,74,75,75,62,32 }, ID, i, j = 0;

	puts("Data items in original order");

	//output original array
	for (size_t i = 0; i < SIZE; ++i) {
		printf("%4d", a[i]);
	}
	printf("\n");
	for (size_t i = 0; i < SIZE; ++i) {
		printf("%4d", c[i]);
	}

	//bubble sort
	//loop to control number of passes

	sort(a, c, SIZE);
	puts("\nData items in ascending order");

	//output sorted array
	for (size_t i = 0; i < SIZE; ++i) {
		printf("%4d", a[i]);
	}
	printf("\n");
	for (size_t i = 0; i < SIZE; ++i) {
		printf("%4d", c[i]);
	}

	printf("Input student ID: ");
	scanf_s("%d", &ID);
	for (i = 0; i < SIZE; i++)
		if (ID == a[i]) {
			printf("Student %d got %d !", a[i], c[i]);
			break;
		}
		else
			j++;
	if (j >= 9)printf("student %d not found!", ID);

	puts("");
}

void sort(int a[], int c[], int size)
{
	int hold;
	for (int pass = 1; pass < SIZE; ++pass) {
		//loop to control number of comparisons per pass
		for (size_t i = 0; i < SIZE - 1; ++i) {
			//compare adjacent elements and swap them if first
			//element is greater than second element
			if (c[i] > c[i + 1]) {
				hold = c[i];
				c[i] = c[i + 1];
				c[i + 1] = hold;
				hold = a[i];
				a[i] = a[i + 1];
				a[i + 1] = hold;
			}
		}
	}
}
